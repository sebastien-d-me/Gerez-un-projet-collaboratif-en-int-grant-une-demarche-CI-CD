name: Rapport de couvertures
run-name: Gérez un projet collaboratif en intégrant une démarche CI/CD
on: [push]
jobs:
  test-coverages:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install the dependencies NPM in the front folder
        run: npm ci
        working-directory: ./front
      - name: Install Angular
        run: npm install -g @angular/cli
      - name: Generate the front code coverage
        run: ng test --code-coverage --browsers=ChromeHeadless --watch=false
        working-directory: ./front
      - name: Save the front coverage
        uses: actions/upload-artifact@v4
        with:
            name: front-coverage
            path: ./front/coverage
      - name: Install the dependencies MVN in the back folder
        run: mvn clean install
        working-directory: ./back
      - name: Generate the back code coverage
        run: mvn test
        working-directory: ./back
      - name: Save the back coverage
        uses: actions/upload-artifact@v4
        with:
            name: back-coverage
            path: ./back/target/site/jacoco
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}